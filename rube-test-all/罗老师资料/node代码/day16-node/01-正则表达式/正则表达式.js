// 1. 创建一个正则表达式
//注意: 如果//中间没有任何内容,则是注释,如果//中间有内容就是正则表达式/a/

// 正则表达式在js中,属于对象数据类型(正则对象)

// /a/ 可以对字符串进行匹配, 提取以及替换

// 正则对象.test(字符串) 如果字符串符合正则对象的要求,返回的结果就是true,如果不合符要求.就返回false

// 要求: 要求字符串中要有字符a
// console.log(/a/.test('123'))
// console.log(/a/.test('abc'))

// 要求: 要求字符串中包含数字
// console.log(/\d/.test('abc'))

// 2. 认识特殊字符

let reg = /\d/ // 表示字符串中要包含数字
reg = /\D/ // 包含非数字即可
reg = /\w/ //表示数字,字母,下划线
reg = /\W/ //表示非数字,非字母,非下划线
reg = /\s/ // 表示空白符: 空格 换行(\r\n)
reg = /\S/ // 表示空白符: 非空格 非换行(\r\n)
reg = /./ // 表示除换行符意外的 所有单个字符
reg = /^a/ // 表示以a开头就可以
reg = /a$/ // 表示以a结尾就可以
reg = /^abc$/ //表示字符串只能是abc

//注意: 限定符一定要和^$配合使用.否则没有意义
reg = /^a{2}$/ //表示字符串只能是aa
reg = /^a{2,4}$/ //表示字符串只能是2~4个a
reg = /^a{2,}$/ //表示字符串只能是a,a只是2个
reg = /^a{2,}b$/ //表示字符串只能是a和b,a至少2个,b就只能是一个
reg = /^a{2,}bc$/ //表示字符串只能是a和b和c,a至少2个,b就只能是一个,c只能是一个
reg = /^a*$/ // *表示 0~n 要么什么都没有,要有只能是a, a可以是多个
reg = /^a+$/ // +表示1~n 至少有一个a
reg = /^a?$/ // ? 0或1 要么什么都没有,要么就只能是一个a
reg = /^a{2}b+c?$/ // a必须两个,b可有可无,如果有几个都行,c可有可无,如果有就是一个
reg = /^a?bbb$/ // a可有可无,如果有只能是一个, b三个

reg = /^[abc]$/ // 只能是一个a或一个b或一个c
reg = /^[a-z]$/ // 表示a~z的26个英文字符都可以(不包含大写)
reg = /^[A-Za-z]$/ // 表示a~z的26个英文字符都可以(包含大写)
reg = /^[^abc]$/ // 表示只能是一个字符, 这个字符只有不是a或b或c就可以
reg = /^\.$/ // 表示只能是一个字符, 这个字符就是.  \是转义符,一般用来将特殊字符串转成普通字符
reg = /^a\?$/
reg = /^a|c$/ // 以a开头或以c结尾 |直接出现在正则,会将两边的内容分成两个部分
reg = /^a|bc$/ // 以a开头或以bc结尾
reg = /^g(r|a)y$/ // 当竖线出现在()中,竖线就只将(小括号里面的分成两个部分)
reg = /^g[ra]y$/ // 当竖线出现在()中,竖线就只将(小括号里面的分成两个部分)
reg = /^\u4f60\u597d$/ // 当竖线出现在()中,竖线就只将(小括号里面的分成两个部分)
console.log(reg.test('呵呵'))
